generator client {
    provider        = "prisma-client-js"
    previewFeatures = ["referentialIntegrity"]
}

datasource db {
    provider             = "mongodb"
    url                  = env("DATABASE_URL")
    referentialIntegrity = "prisma"
}

generator nestgraphql {
    provider = "node node_modules/prisma-nestjs-graphql"
    output   = "../src/@generated"
}

model Anime {
    id           String     @id @default(uuid()) @map("_id")
    slug         String     @unique
    malId        Int        @unique
    anilistId    Int?       @unique
    animeXId     String?    @unique
    animeBlkomId String?    @unique
    cover        AnimeImage @relation(name: "cover", fields: [coverId], references: [id])
    
    coverId String @unique
}

model AnimeImage {
    id        String   @id @default(uuid()) @map("_id")
    source    String
    key       String   @unique
    anime     Anime?   @relation(name: "cover")
    createdAt DateTime @default(now())
    updatedAt DateTime @default(now())
}

model Episode {
    id String @id @default(uuid()) @map("_id")
}

model Studio {
    id String @id @default(uuid()) @map("_id")
}

model Genre {
    id String @id @default(uuid()) @map("_id")
}

model Staff {
    id String @id @default(uuid()) @map("_id")
}

type FuzzyDate {
    year  Int?
    month Int?
    day   Int?
}

enum EpisodeLanguage {
    AR
    EN
}

enum AnimeBroadcastDays {
    MONDAYS
    TUESDAYS
    WEDNESDAYS
    THURSDAYS
    FRIDAYS
    SATURDAYS
    SUNDAYS
}

enum AnimeSources {
    ANIME_X
    ANIME_BLKOM
}

enum CharacterRole {
    MAIN
    SUPPORTING
    BACKGROUND
}

enum GenreType {
    GENRE
    EXPLICIT_GENRE
    THEME
    DEMOGRAPHIC
}

enum Sources {
    ANIMEX
    ANIMEIFY
    XSANIME
    ANIMESLAYER
}

enum AnimeRelation {
    ADAPTATION
    PREQUEL
    SEQUEL
    PARENT
    SIDE_STORY
    CHARACTER
    SUMMARY
    ALTERNATIVE
    SPIN_OFF
    OTHER
    SOURCE
    COMPILATION
    CONTAINS
}

enum AnimeStatus {
    RELEASING
    NOT_YET_RELEASED
    FINISHED
    CANCELLED
    HIATUS
}

enum AnimeSeason {
    WINTER
    SPRING
    SUMMER
    FALL
}

enum AnimeFormat {
    TV
    TV_SHORT
    MOVIE
    SPECIAL
    OVA
    ONA
    MUSIC
    MANGA
    NOVEL
    ONE_SHOT
}

enum AnimeSource {
    ORIGINAL
    MANGA
    LIGHT_NOVEL
    VISUAL_NOVEL
    VIDEO_GAME
    OTHER
    NOVEL
    DOUJINSHI
    ANIME
    WEB_NOVEL
    LIVE_ACTION
    GAME
    COMIC
    MULTIMEDIA_PROJECT
    PICTURE_BOOK
}
